buildscript {
    repositories {
        mavenCentral()
    }
	dependencies {
        classpath("org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.3.1")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.1.RELEASE")
    }
}

plugins {
    id 'pl.allegro.tech.build.axion-release' version '1.2.0'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'jacoco'
apply plugin: 'sonar-runner'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'spring-boot'

repositories {
    mavenCentral()
}

dependencies {
    // lucene
    compile("org.apache.lucene:lucene-core:4.10.3")
    compile("org.apache.lucene:lucene-queries:4.10.3")
    compile("org.apache.lucene:lucene-analyzers-common:4.10.3")
    compile("org.apache.lucene:lucene-queryparser:4.10.3")
    compile("com.google.guava:guava:18.0")
    // context
    compile("org.springframework.boot:spring-boot-starter-web:1.2.1.RELEASE") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty:1.2.1.RELEASE")
    // actuator
    compile("org.springframework.boot:spring-boot-starter-actuator:1.2.1.RELEASE")
    // thymeleaf
    compile("org.springframework.boot:spring-boot-starter-thymeleaf:1.2.1.RELEASE")
    // context-support
    compile("org.springframework:spring-context-support:4.1.4.RELEASE")
    // log
    compile("org.slf4j:slf4j-api:1.7.10")
    compile("ch.qos.logback:logback-classic:1.1.2")
    // annotations
    compile("com.google.code.findbugs:jsr305:3.0.0")
    compile("com.nesscomputing.testing:findbugs-annotations:2.0.0")

    testCompile("org.springframework.boot:spring-boot-starter-test:1.2.1.RELEASE")
    testCompile("junit:junit:4.12")
    testCompile("org.mockito:mockito-all:2.0.2-beta")
    testCompile("org.assertj:assertj-core:1.7.1")
    testCompile("eu.codearte.catch-exception:catch-exception:1.3.4")
    testCompile("nl.jqno.equalsverifier:equalsverifier:1.6")
    testCompile("pl.pragmatists:JUnitParams:1.0.4")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

jacoco {
    toolVersion = '0.7.2.+'
}

jacocoTestReport {
    reports {
        html.destination "$buildDir/reports/jacoco"
        xml.enabled = true
        html.enabled = true
    }
}

sonarRunner {
    toolVersion = '2.4'
}

sourceCompatibility = 1.8

mainClassName = "com.piotrglazar.lookup.LookUp"

checkstyle {
    toolVersion = '6.3'
    ignoreFailures = true
}

pmd {
    ignoreFailures = true
}

findbugs {
    toolVersion = '3.0.0'
    effort = 'max'
    ignoreFailures = true
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

scmVersion {
    tag {
        prefix = 'look-up'
    }
}

// make our version available to all
project.version = scmVersion.version

jar {
    baseName = 'look-up'
    version =  project.version
    manifest {
        attributes 'Main-Class': 'com.piotrglazar.lookup.LookUp'
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
